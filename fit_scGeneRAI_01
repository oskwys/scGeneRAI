#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Jun  2 22:52:47 2023

@author: owysocki
"""
import pyarrow.feather as feather

import pandas as pd

import numpy as np
import sys
import os
import seaborn as sns
# %% load data

path_to_data = '/home/owysocki/Documents/KI_dataset/data_to_model'

df_fus = feather.read_feather(os.path.join(path_to_data, 'CCE_fusions_to_model') )
df_mut = feather.read_feather( os.path.join(path_to_data, 'CCE_mutations_to_model') ,)
df_amp = feather.read_feather( os.path.join(path_to_data, 'CCE_amplifications_to_model') )
df_del = feather.read_feather( os.path.join(path_to_data, 'CCE_deletions_to_model') , )
df_exp = feather.read_feather( os.path.join(path_to_data, 'CCE_expressions_to_model') , )



# %% data to model
df_exp = df_exp.apply(lambda x: np.log(x + 1))

df_exp_stand = (df_exp-df_exp.mean(axis=0))/df_exp.std(axis=0)#.apply(lambda x: np.log(x +1))
df_mut_stand = (df_mut-df_mut.min(axis=0))/df_mut.max(axis=0)
df_fus_stand = (df_fus-df_fus.min(axis=0))/df_fus.max(axis=0)


df_exp_stand.columns = [col + '_exp' for col in df_exp_stand.columns]
df_mut_stand.columns = [col + '_mut' for col in df_mut.columns]
df_amp.columns = [col + '_amp' for col in df_amp.columns]
df_del.columns = [col + '_del' for col in df_del.columns]
df_fus_stand.columns = [col + '_fus' for col in df_fus.columns]


data = pd.concat((df_exp_stand, df_mut_stand, df_amp, df_del, df_fus_stand), axis = 1)

data.iloc[:500,:]

# %% fit
from scGeneRAI import scGeneRAI
model = scGeneRAI()


model_depth = 2
nepochs = 20


model.fit(data, nepochs, model_depth, lr=2e-2, batch_size=5, lr_decay = 0.99, descriptors = None, early_stopping = True, device_name = 'cpu')

preds = model.predict_networks(data.iloc[:10,:], descriptors = None, LRPau = True, remove_descriptors = True, device_name = 'cpu', PATH = '.')

